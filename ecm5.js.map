{"version":3,"sources":["src/index.js"],"names":[],"mappings":";;;;AAEA,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;AACzC,SAAS,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC;AACxB,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACd,GAAE,CAAC,CAAC,CAAC,CAAC;CACN,CAAC;;;AAGF,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAE,UAAA,MAAM;QAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC;CAAA,CAAC,CAAC;;AAE5D,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAE,UAAA,MAAM,EAAI;AACvB,QAAO,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAA;CAClC,CAAC,CAAC;;;;AAIH,SAAS,KAAK,CAAC,CAAC,EAAC,CAAC,EAAC;AAClB,KAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,KAAI,CAAC,CAAC,GAAG,CAAC,CAAC;CACX;;;AAGD,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,EAAE,EAAC;AACrC,KAAI,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,GAAE,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC;CAChC,CAAA;;AAED,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACzB,GAAG,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE,GAAG,EAAC;;;AAC/B,KAAG,KAAK,EAAC;AACR,QAAM,KAAK,CAAC;EACZ;AACD,QAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;AAElC,aAAY,CAAC,YAAU;AACtB,SAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC;;;AAGH,aAAY,CAAC,YAAM;AAClB,SAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAK,CAAC,EAAE,MAAK,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;CACH,CAAC,CAAA;;AAIF,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC","file":"ecm5.js","sourcesContent":["// Arrow Functions\n// **********************************************\nconsole.info('------------------------'); //for readability when using nodemon\nfunction asyncAdd(a,b,cb){\n\tvar c = a + b;\n\tcb(c);\n};\n\n// advantage: got rid of curly braces\nasyncAdd(1,5, result => console.warn('the sum is', result));\n\nasyncAdd(1,5, result => { \n\tconsole.warn('the sum is', result)\n});\n\n// **********************************************\n// Managing \"this\"\nfunction Adder(a,b){\n\tthis.a = a;\n\tthis.b = b;\n}\n\n// Add method to Adder object\nAdder.prototype.execute = function(cb){\n\tvar sum = this.a + this.b;\n\tcb.bind(this, undefined, sum)();\n}\n\nvar add = new Adder(1,2);\nadd.execute(function(error, sum){\n\tif(error){\n\t\tthrow error;\n\t}\n\tconsole.log('context is', this.a); //prints OK\n\n\tsetImmediate(function(){\n\t\tconsole.log('the sum', sum);\n\t\tconsole.log('context using function is', this.a, this.b);\n\t});\n\n\t// no need for var that = this;\n\tsetImmediate(() => {\n\t\tconsole.log('the sum', sum);\n\t\tconsole.log('context using => ', this.a, this.b);\n\t});\t\n})\n\n\n\nconsole.info('------------------------');"]}