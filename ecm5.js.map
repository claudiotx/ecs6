{"version":3,"sources":["src/index.js"],"names":[],"mappings":";;;;;;;;;;AAMC,IAAG,IAAI,EAAC;AACP,KAAI,EAAC,GAAG,UAAU,CAAC;AACnB,QAAO,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC;CAChB;AACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;;;AAKf,IAAI,GAAG,GAAG;AACT,MAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;CAC1B,CAAC;;IAGM,OAAO,GAEX,GAAG,CAFN,KAAK;IACC,QAAQ,GACX,GAAG,CADN,IAAI;;;;;AAKL,SAAS,YAAY,GAAE;AACtB,KAAI,GAAG,GAAG;AACT,MAAI,EAAE,SAAS;AACf,OAAK,EAAE,KAAK;EACZ,CAAC;AACF,QAAO,GAAG,CAAC;CACX,CAAC;;oBAE0B,YAAY,EAAE;;IAA/B,EAAE,iBAAR,IAAI;IAAa,EAAE,iBAAT,KAAK;;;;;AAIpB,SAAS,WAAW,GAAE;AACrB,KAAI,GAAG,GAAG,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC;AAC1B,QAAO,GAAG,CAAC;CACX;;mBAEiB,WAAW,EAAE;;;;IAA1B,IAAI;IAAC,IAAI;;;;;AAId,SAAS,oBAAoB,GAAE;AAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,EAAC,GAAG,GAAE,GAAG,CAAC,CAAC;AACzB,QAAO,GAAG,CAAC;CACX;;4BACgC,oBAAoB,EAAE;;;;IAAlD,KAAK;IAAC,MAAM;IAAC,KAAK;IAAC,KAAK","file":"ecm5.js","sourcesContent":["// Immediatelly Invoked Function Expression for Wrapping Isolation from Global Namespace\n//(function(){\n\t// **********************************************\n\t// Scoping Example\n\t//var a = \"first a\";\n\n\tif(true){\n\t\tlet a = \"second a\";\n\t\tconsole.info(a);\n\t}\n\tconsole.log(a);\n\n\t// **********************************************\n\t// Destructuring Example (access the value of the keys directly)\n\t// example 1 - literal object with let\n\tlet obj = { \n\t\tfirst: 'Jane', last: 'Doe' \n\t};\n\n\tlet { \n\t\tfirst: newProp, //take value from 'first' attribute and assign to variable newProp\n\t\tlast: testProp \n\t} = obj; // (A)\t\n\t//console.warn(newProp,testProp);\n\n\t// example 2 - literal object with var\n\tfunction takeMyObject(){\n\t\tvar obj = {\n\t\t\tmake: 'porsche',\n\t\t\tmodel: '911'\n\t\t};\t\n\t\treturn obj;\n\t};\t\t\n\n\tvar {make: xx, model: yy} = takeMyObject();\n\t//console.log(xx,yy)\n\n\t// example 3 - array\n\tfunction takeMyArray(){\n\t\tvar arr = ['Race','Mode'];\n\t\treturn arr;\n\t}\n\n\tvar [var1,var2] = takeMyArray();\n\t//console.log(var1)\n\n\t// example 4 - array\n\tfunction takeFromAnotherArray(){\n\t\tvar arr = ['X','Y',,'Z']; //amazing no syntax error\n\t\treturn arr;\n\t}\n\tlet [first,second,third,forth] = takeFromAnotherArray();\n\t//console.warn(first,second,third,forth);\n\t//\n\n\t// limited scoping using 'let'\n\t// for (let i = 0; i < 5; i++) {\n\t// \tconsole.warn(i);\n\t// };\t\n\n//})();\n"]}