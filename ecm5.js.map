{"version":3,"sources":["src/iterators.js"],"names":[],"mappings":";;;;;;;;;;;iBAOU,QAAQ,EAwBR,KAAK;AA1Bf,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;;AAE3D,SAAU,QAAQ,CAAC,GAAG;KACjB,CAAC,EACD,CAAC;;;;;WADe,GAAG,GAAC,CAAC;;;;AAArB,KAAC,GAAG,CAAC;;WACK,CAAC,GAAC,CAAC;;;AAAb,KAAC;wCACE,GAAG,GAAG,CAAC,GAAG,CAAC;;;;;;;CAClB;;;AAID,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;;;AAGrB,IAAI,WAAW,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;AAExB,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;AAExB,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;;;;AAKxB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AACzC,SAAU,KAAK;;;;;WACR,CAAC;;;;WACD,CAAC;;;;WACD,CAAC;;;wCACA,EAAE;;;;;;;CACT;;;;;;;;AAED,mCAAc,KAAK,EAAE,4GAAE;MAAd,CAAC;;AACT,SAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;EACd;;;;;;;;;;;;;;;;AAED,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC","file":"ecm5.js","sourcesContent":["/*\n\tGenerator Iterator - Design Pattern which allows to step through an ordered set of values one at a time by calling .next()\n\tRule 1 - When passing an argument to the generator function, the first .next() arguments will be ignored\n\n */\nconsole.log('+-----------------------------------------+');\n\nfunction *iterator(arg){\n\tvar y = 2 * (yield (arg+1)); // return { arg+1 }\n\tvar z = yield(y+3);\n\treturn arg + y + z;\n}\n\n\n// initialize\nvar it = iterator(1); // (passed 1 as an argument to iterator function)\n\n// start iterator\nvar countOutput = it.next(); // return { 2*1 }\nconsole.log(countOutput)\n\ncountOutput = it.next(2); // return { 4+3 } (passed 2 for result of 1st yield)\nconsole.log(countOutput)\n\ncountOutput = it.next(1); // return { 1 + 4 + 1 } (passed 1 for result of 2nd yield)\nconsole.log(countOutput) // done: true, countOutput:3\n\n/*\n\tFor...Of iterator pattern\n */\nconsole.log('for...of ITERATOR PATTERN');\nfunction *forOf(){\t\n\tyield 1;\n\tyield 2;\n\tyield 3;\n\treturn 66; //ignored by the for of loop\n}\n\nfor (var v of forOf()) {\n\tconsole.log(v)\n}\n\nconsole.log('+-----------------------------------------+');\n\n"]}